package com.example.security;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;

import com.example.security.Rooom.AppsDataRoomDB;
import com.google.android.material.floatingactionbutton.FloatingActionButton;


import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.text.format.Formatter;
import android.util.Log;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Button;

import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Collections;
import java.util.List;

public class MainActivity extends AppCompatActivity {

    String version;
    FloatingActionButton fab;
    Button phishingButton;
    private AppsDataRoomDB appsDataRoomDB;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);


        appsDataRoomDB = AppsDataRoomDB.getDatabase(getApplicationContext());

    }

    private String getIPAddress() {
        try {
            List<NetworkInterface> all = Collections.list(NetworkInterface.getNetworkInterfaces());
            for(NetworkInterface nif : all){
                List<InetAddress> iAddresses = Collections.list(nif.getInetAddresses());
                for(InetAddress ia : iAddresses){
                    if(!ia.isLoopbackAddress()){
                        String ipaddress = ia.getHostAddress();
                        Log.d("Test:","-----------------------------------------#################: "+ia.hashCode());
                        return ipaddress;

                    }

                }
            }
        } catch (SocketException e) {
            e.printStackTrace();
        }

        return "";
    }

    @Override
    protected void onStart() {
        super.onStart();
    }

    @Override
    protected void onResume() {
        super.onResume();
        Log.e("Msg: ","-------------------------------############################  OnResume()");
        fab = findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                Log.e("Android Version", Build.VERSION.RELEASE);
                PackageManager pm = getPackageManager();
                List<ApplicationInfo> installedApplication = pm.getInstalledApplications(PackageManager.GET_META_DATA);
                for(ApplicationInfo packageInfo : installedApplication){
                    if(packageInfo.packageName.startsWith("com.google.") || (packageInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 1){
                        try {
                            version = pm.getPackageInfo(packageInfo.packageName, 0).versionName;
                        } catch (PackageManager.NameNotFoundException e) {
                            e.printStackTrace();
                        }

                        Log.e("PackageName", packageInfo.packageName);
                        Log.e("Version", version);
                        Log.e("Source directory", packageInfo.sourceDir);
                        Log.e("Application Name", pm.getApplicationLabel(packageInfo).toString());
                        Log.e("Intent", String.valueOf(pm.getLaunchIntentForPackage(packageInfo.packageName)));
                        Log.d( " ","###################################");

                    }


                }
                Log.e("MAC Address:",getMacAddr());
                Log.e("IP Address: ", getIPAddress());
            }
        });

        phishingButton = findViewById(R.id.buttonPhishing);
        phishingButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {

                Intent intent = new Intent(getApplicationContext(), PhishingActivity.class);
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(intent);
            }
        });

        /*Intent intentForAlarm = new Intent();
        PendingIntent pendingIntentForAlarm = PendingIntent.getBroadcast(getApplicationContext(), 0, intentForAlarm, 0);
        AlarmManager alarmManager = (AlarmManager) getApplicationContext().getSystemService(Context.ALARM_SERVICE);
        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){
            alarmManager.setExact(AlarmManager.RTC_WAKEUP, 60*1000, pendingIntentForAlarm);
        }
        alarmManager.set(AlarmManager.RTC_WAKEUP, 60*1000, pendingIntentForAlarm);
        Log.e("MainActivity","_------------------------------------################## Alarm Manager set");*/
    }

    @Override
    protected void onPause()
    {
        super.onPause();
        Log.e("Msg: ","-------------------------------############################  OnPause()");
    }

    public static String getMacAddr() {
        try {
            List<NetworkInterface> all = Collections.list(NetworkInterface.getNetworkInterfaces());
            for (NetworkInterface nif : all) {
                if (!nif.getName().equalsIgnoreCase("wlan0")) continue;

                byte[] macBytes = nif.getHardwareAddress();
                if (macBytes == null) {
                    return "";
                }

                StringBuilder res1 = new StringBuilder();
                for (byte b : macBytes) {
                    res1.append(String.format("%02X:",b));
                }

                if (res1.length() > 0) {
                    res1.deleteCharAt(res1.length() - 1);
                }
                return res1.toString();
            }
        } catch (Exception ex) {
        }
        return "02:00:00:00:00:00";
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
