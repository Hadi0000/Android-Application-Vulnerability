package com.example.security.Rooom;


import android.content.Context;
import android.util.Log;

import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

@Database(entities = {AppsData.class}, version = 1, exportSchema = false)
public abstract class AppsDataRoomDB extends RoomDatabase {

    public abstract AppsdataDao appsdataDao();

    private static  volatile AppsDataRoomDB INSTANCE;
    private static  final int NUMEBR_OF_THREADS = 4;
    static final ExecutorService databaseWriteExecutor =
            Executors.newFixedThreadPool(NUMEBR_OF_THREADS);

    public static  AppsDataRoomDB getDatabase(final Context context){
        if(INSTANCE == null){
            synchronized (AppsDataRoomDB.class){
                if(INSTANCE == null){
                    INSTANCE = Room.databaseBuilder(context.getApplicationContext(),
                            AppsDataRoomDB.class, "apps_database").build();
                    Log.e("AppsDatabase","Database created");
                }
            }
        }
        Log.e("AppsDatabase","Database INSTANCE returned");
        return INSTANCE;
    }
}
